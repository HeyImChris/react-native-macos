// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput tests should render as expected: should deep render when mocked (please verify output manually) 1`] = `
<RCTSinglelineTextInputView
  acceptsFirstMouse={true}
  accessible={true}
  allowFontScaling={true}
<<<<<<< HEAD
  enableFocusRing={true}
=======
  blurOnSubmit={true}
>>>>>>> 1aa4f47e2f119c447b4de42808653df080d95fe9
  focusable={true}
  forwardedRef={null}
  mostRecentEventCount={0}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onScroll={[Function]}
  onSelectionChange={[Function]}
  onSelectionChangeShouldSetResponder={[Function]}
  onStartShouldSetResponder={[Function]}
  rejectResponderTermination={true}
  selection={null}
  text=""
  underlineColorAndroid="transparent"
/>
`;

exports[`TextInput tests should render as expected: should deep render when not mocked (please verify output manually) 1`] = `
<RCTSinglelineTextInputView
  acceptsFirstMouse={true}
  accessible={true}
  allowFontScaling={true}
<<<<<<< HEAD
  enableFocusRing={true}
=======
  blurOnSubmit={true}
>>>>>>> 1aa4f47e2f119c447b4de42808653df080d95fe9
  focusable={true}
  forwardedRef={null}
  mostRecentEventCount={0}
  onBlur={[Function]}
  onChange={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onKeyDown={[Function]}
  onKeyUp={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onScroll={[Function]}
  onSelectionChange={[Function]}
  onSelectionChangeShouldSetResponder={[Function]}
  onStartShouldSetResponder={[Function]}
  rejectResponderTermination={true}
  selection={null}
  text=""
  underlineColorAndroid="transparent"
/>
`;

exports[`TextInput tests should render as expected: should shallow render as <TextInput /> when mocked 1`] = `
<ForwardRef(TextInput)
  allowFontScaling={true}
  rejectResponderTermination={true}
  underlineColorAndroid="transparent"
/>
`;

exports[`TextInput tests should render as expected: should shallow render as <TextInput /> when not mocked 1`] = `
<ForwardRef(TextInput)
  allowFontScaling={true}
  rejectResponderTermination={true}
  underlineColorAndroid="transparent"
/>
`;
